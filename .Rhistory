library(tidyverse)
library(dplyr)
> mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
View(mpg_long)
View(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
plt + geom_boxplot() + facet_wrap(vars(class)) + #create multiple boxplots, one for each class
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
plt + geom_boxplot() + facet_wrap(vars(drv)) + #create multiple boxplots, one for each drv
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
setwd("C:/Users/Greenspan/Desktop/MechaCar_Statistical_Analysis")
library(dplyr)
mecha_df <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(mecha_df)
View(mecha_df)
View(mecha_df)
View(mecha_df)
View(mecha_df)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data = mecha_df) #create linear model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data = mecha_df)) #create summary
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data = mecha_df) #create linear regression
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data = mecha_df)) #create summary
summary_coil <-read.csv('Summary_Coil.csv', check.names=F,stringsAsFactors = F)
suspension_coil <-read.csv('Suspension_Coil.csv', check.names=F,stringsAsFactors = F) #create dataframe
View(suspension_coil)
View(suspension_coil)
View(suspension_coil)
View(suspension_coil)
summarize_demo <- suspension_coil %>% group_by(condition) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI) , SD=sd(PSI), .groups = 'keep') #create summary table with multiple columns
View(suspension_coil)
View(suspension_coil)
summarize_demo <- suspension_coil %>% group_by(VehicleID) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI) , SD=sd(PSI), .groups = 'keep') #create summary table with multiple columns
View(summarize_demo)
View(summarize_demo)
summary_table <- suspension_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep') #create summary table with multiple columns
View(summary_table)
View(summary_table)
total_summary <- suspension_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep') #create summary table with multiple columns
lot_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(Manufacturing_Lot),Maximum=max(Manufacturing_Lot,Variance=var(Manufacturing_Lot),SD=sd(Manufacturing_Lot), .groups = 'keep') #create lot summary table with multiple columns
View(suspension_coil)
View(total_summary)
View(total_summary)
lot_summary <- suspension_coil %>% groupby(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep') #create lot summary table with multiple columns
lot_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep') #create lot summary table with multiple columns
View(lot_summary)
View(lot_summary)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data = mecha_df) #create linear regression
t.test(suspension_coil$PSI,mu=1500) #compare sample versus population mean
View(suspension_coil)
View(suspension_coil)
View(suspension_coil)
View(suspension_coil)
t.test(subset(suspension_coil$PSI,suspension_coil$Manufacturing_Lot== "Lot1"),mu=1500) #t-test for lot1
t.test(subset(suspension_coil$PSI,suspension_coil$Manufacturing_Lot== "Lot1"),mu=1500) #t-test for lot1
t.test(subset(suspension_coil$PSI,suspension_coil$Manufacturing_Lot== "Lot2"),mu=1500) #t-test for lot2
t.test(subset(suspension_coil$PSI,suspension_coil$Manufacturing_Lot== "Lot3"),mu=1500) #t-test for lot3
